<UserControl x:Class="ProcMonX.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sf="http://schemas.syncfusion.com/wpf"
             xmlns:vm="clr-namespace:ProcMonX.ViewModels.Tabs"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:z="http://zodiacon.wpf/2016" x:Name="This"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Menu z:InputHelper.AttachInputBindings="True">
            <MenuItem Header="_File">
                <MenuItem Header="_Open..." Command="{Binding OpenCommand}" Icon="{z:Image /icons/normal/open.ico, Width=20, Height=20}" InputGestureText="Ctrl+O" />
                <MenuItem Header="_Save..." Command="{Binding SaveCommand}" Icon="{z:Image /icons/normal/save.ico, Width=20, Height=20}" InputGestureText="Ctrl+S" />
                <Separator />
                <MenuItem Header="E_xit" Command="{Binding ExitCommand}" />
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Copy" Command="Copy" Icon="{z:Image /icons/normal/copy.ico, Width=20, Height=20}" />
            </MenuItem>
            <MenuItem Header="_View">
                <MenuItem Header="All _Events" Icon="{z:Image /icons/normal/event.ico, Width=20, Height=20}" Command="{Binding ViewTabCommand}" CommandParameter="All Events" />
                <MenuItem Header="_Processes" Icon="{z:Image /icons/normal/processes.ico, Width=20, Height=20}" Command="{Binding ViewTabCommand}" CommandParameter="Processes" />
                <MenuItem Header="_Threads" Icon="{z:Image /icons/normal/threads.ico, Width=20, Height=20}" Command="{Binding ViewTabCommand}" CommandParameter="Threads" />
                <MenuItem Header="_Registry" Icon="{z:Image /icons/normal/registry.ico, Width=20, Height=20}" Command="{Binding ViewTabCommand}" CommandParameter="Registry" />
                <MenuItem Header="_Modules" Icon="{z:Image /icons/normal/module.ico, Width=20, Height=20}" Command="{Binding ViewTabCommand}" CommandParameter="Modules" />
                <MenuItem Header="_Files" Icon="{z:Image /icons/category/files.ico, Width=20, Height=20}" Command="{Binding ViewTabCommand}" CommandParameter="Files" />
                <MenuItem Header="Memo_ry" Icon="{z:Image /icons/category/memory.ico, Width=20, Height=20}" Command="{Binding ViewTabCommand}" CommandParameter="Memory" />
                <MenuItem Header="_Network" Icon="{z:Image /icons/category/network.ico, Width=20, Height=20}" Command="{Binding ViewTabCommand}" CommandParameter="Network" />
                <MenuItem Header="_ALPC" Icon="{z:Image /icons/category/alpc.ico, Width=20, Height=20}" Command="{Binding ViewTabCommand}" CommandParameter="Alpc" />
                <Separator />
                <MenuItem Header="Clear All" Icon="{z:Image /icons/normal/clear.ico, Width=20, Height=20}" Command="{Binding ClearAllCommand}" />
                <Separator />
                <MenuItem Header="_Auto Scroll" IsChecked="{Binding AutoScroll}" IsCheckable="True"  />
            </MenuItem>
            <MenuItem Header="_Monitor">
                <MenuItem Header="_Go" Icon="{z:Image /icons/normal/play.ico, Width=20, Height=20}" Command="{Binding GoCommand}" />
                <MenuItem Header="_Stop" Icon="{z:Image /icons/normal/stop.ico, Width=20, Height=20}" Command="{Binding StopCommand}" />
                <Separator />
                <MenuItem Header="Specific Processes..." Icon="{z:Image /icons/normal/processes.ico, Width=20, Height=20}" />
            </MenuItem>
            <MenuItem Header="_Options">
                <MenuItem Header="_Always On Top" IsChecked="{Binding Options.AlwaysOnTop}" IsCheckable="True"
                          Command="{Binding AlwaysOnTopCommand}" CommandParameter="{Binding ElementName=This}" />
                <MenuItem Header="_Fonts..." />
                <MenuItem Header="_Colors..." />
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_About Process Monitor X..." Command="{Binding AboutCommand}" />
            </MenuItem>
        </Menu>

        <ToolBar Grid.Row="1" >
            <ToolBar.Resources>
                <Style TargetType="Button" x:Key="{x:Static ToolBar.ButtonStyleKey}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                    <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                </Style>
            </ToolBar.Resources>
            <Button Command="{Binding GoCommand}" ToolTip="Start Monitoring"  Content="{z:Image /icons/normal/play.ico, Width=24, Height=24}"  />
            <Button Command="{Binding StopCommand}" ToolTip="Stop Monitoring" Content="{z:Image /icons/normal/stop.ico, Width=24, Height=24}" />
            <Separator />
            <Button Content="{z:Image /icons/normal/Event.ico, Width=24, Height=24}" ToolTip="All Events" Command="{Binding ViewTabCommand}" CommandParameter="All Events" />
            <Button Content="{z:Image /icons/normal/Processes.ico, Width=24, Height=24}" ToolTip="Processes" Command="{Binding ViewTabCommand}" CommandParameter="Processes" />
            <Button Content="{z:Image /icons/normal/Module.ico, Width=24, Height=24}" ToolTip="Modules" Command="{Binding ViewTabCommand}" CommandParameter="Modules" />
            <Button Content="{z:Image /icons/normal/Threads.ico, Width=24, Height=24}" ToolTip="Threads" Command="{Binding ViewTabCommand}" CommandParameter="Threads" />
            <Button Content="{z:Image /icons/normal/Registry.ico, Width=24, Height=24}" ToolTip="Registry" Command="{Binding ViewTabCommand}" CommandParameter="Registry" />
            <Button Content="{z:Image /icons/normal/Files.ico, Width=24, Height=24}" ToolTip="Files" Command="{Binding ViewTabCommand}" CommandParameter="Files" />
            <Button Content="{z:Image /icons/normal/Memory.ico, Width=24, Height=24}" ToolTip="Memory" Command="{Binding ViewTabCommand}" CommandParameter="Memory" />
            <Button Content="{z:Image /icons/normal/Network.ico, Width=24, Height=24}" ToolTip="Network" Command="{Binding ViewTabCommand}" CommandParameter="Network" />
            <Button Content="{z:Image /icons/normal/Alpc.ico, Width=24, Height=24}" ToolTip="ALPC" Command="{Binding ViewTabCommand}" CommandParameter="Alpc" />
            <Separator />
            <ToggleButton IsChecked="{Binding AutoScroll}" Style="{StaticResource MetroToggleButton}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="/icons/normal/autoscroll.ico" Width="24" Height="24" />
                    <TextBlock Text="Auto Scroll" VerticalAlignment="Center" Margin="4,0,0,0" FontSize="12" />
                </StackPanel>
            </ToggleButton>
            <Separator />
            <Button Command="{Binding ClearAllCommand}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="/icons/normal/clear.ico" Width="24" Height="24" />
                    <TextBlock Text="Clear All" VerticalAlignment="Center" Margin="4,0,0,0" FontSize="12" />
                </StackPanel>
            </Button>
        </ToolBar>

        <sf:TabControlExt Grid.Row="2" ItemsSource="{Binding Tabs}" SelectedItem="{Binding SelectedTab, Mode=TwoWay}" CloseButtonType="Individual" TabVisualStyle="None" 
                          EnableLabelEdit="False" IsDisableUnloadTabItemExtContent="True" TabItemLayout="MultiLine" TabScrollStyle="Extended" sf:SkinStorage.OverrideVisualStyle="True" sf:SkinStorage.VisualStyle="Metro"
                          sf:SkinStorage.MetroBrush="{DynamicResource AccentColorBrush}" TabItemSelectedBackground="{DynamicResource AccentColorBrush}" TabPanelBackground="{DynamicResource WhiteBrush}"
                          TabItemSelectedForeground="{DynamicResource WhiteBrush}" TabItemHoverBackground="{DynamicResource AccentColorBrush3}" TabItemHoverForeground="{DynamicResource WhiteBrush}"
                          >
            <i:Interaction.Behaviors>
                <z:EventToCommand EventName="TabClosed" Command="{Binding TabClosedCommand}" />
                <z:EventToCommand EventName="TabClosing" Command="{Binding TabClosingCommand}" />
            </i:Interaction.Behaviors>
            <sf:TabControlExt.ItemContainerStyle>
                <Style TargetType="{x:Type sf:TabItemExt}">
                    <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
                </Style>
            </sf:TabControlExt.ItemContainerStyle>
            <sf:TabControlExt.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" >
                        <Image Source="{Binding Icon}" Width="16" Height="16" />
                        <TextBlock Text="{Binding Text}" Margin="4,0,0,0" VerticalAlignment="Center" />
                    </StackPanel>
                </DataTemplate>
            </sf:TabControlExt.ItemTemplate>
        </sf:TabControlExt>

        <StatusBar Grid.Row="3">
            <Image Source="/icons/normal/play.ico" metro:VisibilityHelper.IsVisible="{Binding IsMonitoring}" Width="16" Height="16" />
            <Image Source="/icons/normal/stop.ico" metro:VisibilityHelper.IsCollapsed="{Binding IsMonitoring}" Width="16" Height="16" />
            <Separator />
            <TextBlock Text="{Binding EventCount, StringFormat=Events: \{0\}}" />
            <Separator />
            <TextBlock Text="{Binding LostEvents, StringFormat=Lost Events: \{0\}}" />
        </StatusBar>
    </Grid>
</UserControl>
